include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

# Settings for a TLS enabled server.
#
   server {
        listen 80;
        server_name ectothermeter.com;
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

   server {
       listen       443 ssl http2;
       listen       [::]:443 ssl http2;
       server_name  ectothermeter.com;
       root         /usr/share/nginx/html;

       ssl_certificate "/etc/letsencrypt/live/ectothermeter.com/fullchain.pem";
       ssl_certificate_key "/etc/letsencrypt/live/ectothermeter.com/privkey.pem";
       ssl_session_cache shared:SSL:1m;
       ssl_session_timeout  10m;
       ssl_ciphers PROFILE=SYSTEM;
       ssl_prefer_server_ciphers on;

       # Load configuration files for the default server block.
       include /etc/nginx/default.d/*.conf;

       location / {
          try_files $uri $uri/ /index.html;
       }

       location /api/ {
          rewrite ^/api/(.*) /$1 break;
          proxy_pass http://localhost:8080;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
       }

       error_page 404 /404.html;
       location = /404.html {
       }

       error_page 500 502 503 504 /50x.html;
       location = /50x.html {
       }
   }

}

stream {
    upstream mqtt_backend {
        server 127.0.0.1:2883; # The MQTT broker's address and port
    }

    server {
        listen 1883 ssl; # Listen on port 1883 for MQTT traffic with SSL

        # Path to SSL certificate and key
        ssl_certificate "/etc/letsencrypt/live/ectothermeter.com/fullchain.pem";
        ssl_certificate_key "/etc/letsencrypt/live/ectothermeter.com/privkey.pem";

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        proxy_pass mqtt_backend;
        proxy_timeout 600s;
        proxy_connect_timeout 60s;
    }
}